# Note: include is only supported by git with version 1.7.10.2+
[include]
        path = ~/.gitconfig.local

[color]
        diff = auto
        status = auto
        branch = auto
        grep = auto
[push]
        default = tracking
[merge]
        tool = emerge

[alias]
        branchd = !bash -c 'git branch -d $1 && git push origin :$1' -
        branchdd = !bash -c 'git branch -D $1 && git push origin :$1' -
        aliases = !git config --get-regexp 'alias\\..*' | sed -e 's/^alias\\.//' | sort
        eunmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; emacs `f`"
        pruneorigin = "!f() { git branch -a --merged | grep remotes/origin | grep -v HEAD | grep -v origin/master | grep -v origin/origin; }; for b in `f`; do git push origin :${b##remotes/origin/}; done"
        rbs = !git rebase --ignore-date
        diffchar = !git diff --color-words='[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+'
        linesbyauthor = !sh -c 'git ls-tree -r HEAD | cut -f 2 | xargs -n1 git blame --line-porcelain | grep \"author \" | sort | uniq -c | sort -n -k 1'

        # Delete squash-merged local branches
        # https://stackoverflow.com/questions/43489303/how-can-i-delete-all-git-branches-which-have-been-squash-and-merge-via-github
        # https://github.com/not-an-aardvark/git-delete-squashed
        delsquashmerged = "!git checkout -q master && git for-each-ref refs/heads/ \"--format=%(refname:short)\" | while read branch; do mergeBase=$(git merge-base master $branch) && [[ $(git cherry master $(git commit-tree $(git rev-parse $branch\\^{tree}) -p $mergeBase -m _)) == \"-\"* ]] && git branch -D $branch; done"

# https://blog.gitbutler.com/how-git-core-devs-configure-git/
[branch]
        sort = -committerdate
[tag]
        sort = version:refname
[diff]
        algorithm = histogram
        colorMoved = plain
        mnemonicPrefix = true
        renames = true
[rerere]
        enabled = true
        autoupdate = true
[merge]
        # (just 'diff3' if git version < 2.3)
        conflictstyle = zdiff3
